// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use serde::{Deserialize, Serialize};

#[derive(sqlx::FromRow, Serialize, Debug)]
pub struct ModbusRegister {
    pub id: i32,
    pub register_address: i32,
    pub operation: Option<String>,
    pub register_length: i32,
    pub register_name: Option<String>,
    pub data_format: String,
    pub description: Option<String>,
    pub device_name: String,
    pub status: String,
    pub unit: Option<String>,
    pub created_at: String,
    pub updated_at: String,
}

#[derive(Deserialize, Debug)]
pub struct ModbusRegisterPagination {
    pub limit: Option<i64>,
    pub offset: Option<i64>,
    pub order_by: Option<ModbusRegisterColumns>,
    pub order_dir: Option<OrderByDirection>,
    pub filter: Option<String>,
}

#[derive(Deserialize, Debug)]
#[serde(rename_all = "lowercase")]
pub enum OrderByDirection {
    Asc,
    Desc,
}

#[derive(Deserialize, Debug)]
#[serde(rename_all = "snake_case")]
pub enum ModbusRegisterColumns {
    Id,
    RegisterAddress,
    Operation,
    RegisterLength,
    RegisterName,
    DataFormat,
    Description,
    DeviceName,
    Status,
    Unit,
    CreatedAt,
    UpdatedAt,
}
