//! `SeaORM` Entity. Generated by sea-orm-codegen 1.0.0-rc.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "modbus_register_device_name_id_mapping")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::modbus_register_devices::Entity",
        from = "Column::Name",
        to = "super::modbus_register_devices::Column::Name",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    ModbusRegisterDevices,
}

impl Related<super::modbus_register_devices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ModbusRegisterDevices.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
